use std::collections::HashSet;

use num_bigint::BigUint;

/// How many distinct terms are in the sequence generated by `a^b` for `2 <= a <= 100` and
/// `2 <= b <= 100`?
///
/// This problem is easily solved using a set, provided one has access to arbitrary-precision
/// arithmetic. It's not the fastest solution, but it's simple and plenty fast enough.
pub fn solve() -> usize {
  let limit: u32 = 100;
  let mut uniques = HashSet::new();

  for a in 2..=limit {
    for b in 2..=limit {
      uniques.insert(BigUint::from(a).pow(b));
    }
  }

  uniques.len()
}
